// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VeterinaryClinic.DAL.Data;

#nullable disable

namespace VeterinaryClinic.DAL.Migrations
{
    [DbContext(typeof(VeterinaryClinicManagmentContext))]
    [Migration("20250618165523_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Animals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2020, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Max",
                            OwnerId = 101
                        },
                        new
                        {
                            Id = 2,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2019, 7, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Whiskers",
                            OwnerId = 102
                        },
                        new
                        {
                            Id = 3,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Fluffy",
                            OwnerId = 101
                        },
                        new
                        {
                            Id = 4,
                            AnimalTypeId = 2,
                            BirthDate = new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Sunny",
                            OwnerId = 103
                        },
                        new
                        {
                            Id = 5,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2017, 11, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Spike",
                            OwnerId = 104
                        },
                        new
                        {
                            Id = 6,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2022, 2, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Goldie",
                            OwnerId = 105
                        },
                        new
                        {
                            Id = 7,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2020, 9, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Slinky",
                            OwnerId = 106
                        },
                        new
                        {
                            Id = 8,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2019, 4, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Shadow",
                            OwnerId = 107
                        },
                        new
                        {
                            Id = 9,
                            AnimalTypeId = 2,
                            BirthDate = new DateTime(2018, 6, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Polly",
                            OwnerId = 108
                        },
                        new
                        {
                            Id = 10,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bubbles",
                            OwnerId = 109
                        },
                        new
                        {
                            Id = 11,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2017, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rex",
                            OwnerId = 110
                        },
                        new
                        {
                            Id = 12,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2020, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Kitty",
                            OwnerId = 102
                        },
                        new
                        {
                            Id = 13,
                            AnimalTypeId = 5,
                            BirthDate = new DateTime(2022, 4, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Dart"
                        },
                        new
                        {
                            Id = 14,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2016, 2, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rocky",
                            OwnerId = 104
                        },
                        new
                        {
                            Id = 15,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2021, 3, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Finny"
                        },
                        new
                        {
                            Id = 16,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2019, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Buddy",
                            OwnerId = 111
                        },
                        new
                        {
                            Id = 17,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mittens",
                            OwnerId = 112
                        },
                        new
                        {
                            Id = 18,
                            AnimalTypeId = 2,
                            BirthDate = new DateTime(2022, 6, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Pip",
                            OwnerId = 113
                        },
                        new
                        {
                            Id = 19,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2018, 9, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Snoopy",
                            OwnerId = 114
                        },
                        new
                        {
                            Id = 20,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cleo",
                            OwnerId = 115
                        },
                        new
                        {
                            Id = 21,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2022, 7, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Nemo",
                            OwnerId = 116
                        },
                        new
                        {
                            Id = 22,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2019, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cuddles",
                            OwnerId = 117
                        },
                        new
                        {
                            Id = 23,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Stripe",
                            OwnerId = 118
                        },
                        new
                        {
                            Id = 24,
                            AnimalTypeId = 2,
                            BirthDate = new DateTime(2021, 4, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Tweety",
                            OwnerId = 119
                        },
                        new
                        {
                            Id = 25,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Dory",
                            OwnerId = 120
                        },
                        new
                        {
                            Id = 26,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2018, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Apollo",
                            OwnerId = 121
                        },
                        new
                        {
                            Id = 27,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2020, 8, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Luna",
                            OwnerId = 122
                        },
                        new
                        {
                            Id = 28,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2021, 6, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Hazel",
                            OwnerId = 123
                        },
                        new
                        {
                            Id = 29,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2022, 1, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Spuirty",
                            OwnerId = 124
                        },
                        new
                        {
                            Id = 30,
                            AnimalTypeId = 2,
                            BirthDate = new DateTime(2019, 3, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Gizmo",
                            OwnerId = 125
                        },
                        new
                        {
                            Id = 31,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rocky Jr.",
                            OwnerId = 104
                        },
                        new
                        {
                            Id = 32,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2020, 11, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bella",
                            OwnerId = 126
                        },
                        new
                        {
                            Id = 33,
                            AnimalTypeId = 2,
                            BirthDate = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ollie",
                            OwnerId = 127
                        },
                        new
                        {
                            Id = 34,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2018, 7, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Smokey",
                            OwnerId = 128
                        },
                        new
                        {
                            Id = 35,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Zippy",
                            OwnerId = 129
                        },
                        new
                        {
                            Id = 36,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Finnegan",
                            OwnerId = 130
                        },
                        new
                        {
                            Id = 37,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2019, 10, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Daisy",
                            OwnerId = 131
                        },
                        new
                        {
                            Id = 38,
                            AnimalTypeId = 2,
                            BirthDate = new DateTime(2020, 12, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Peanut",
                            OwnerId = 132
                        },
                        new
                        {
                            Id = 39,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2021, 5, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Koda",
                            OwnerId = 133
                        },
                        new
                        {
                            Id = 40,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2022, 8, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bubba",
                            OwnerId = 134
                        },
                        new
                        {
                            Id = 41,
                            AnimalTypeId = 4,
                            BirthDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Splash",
                            OwnerId = 135
                        },
                        new
                        {
                            Id = 42,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2018, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Leo"
                        },
                        new
                        {
                            Id = 43,
                            AnimalTypeId = 1,
                            BirthDate = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Willow"
                        },
                        new
                        {
                            Id = 44,
                            AnimalTypeId = 5,
                            BirthDate = new DateTime(2021, 9, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Hoppy"
                        },
                        new
                        {
                            Id = 45,
                            AnimalTypeId = 3,
                            BirthDate = new DateTime(2022, 11, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Scales"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.AnimalDisease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("AnimalDiseases", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Highly contagious viral disease affecting dogs.",
                            DiseaseName = "Canine Distemper"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Viral infection that can cause cancer in cats.",
                            DiseaseName = "Feline Leukemia"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Highly pathogenic influenza affecting birds.",
                            DiseaseName = "Avian Flu"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Bacterial infection common in reptiles.",
                            DiseaseName = "Scale Rot"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Bacterial infection affecting fish fins.",
                            DiseaseName = "Fin Rot"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Inflammation of the conjunctiva (eye infection).",
                            DiseaseName = "Conjunctivitis"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Excessive body fat accumulation.",
                            DiseaseName = "Obesity"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Metabolic disease affecting blood sugar levels.",
                            DiseaseName = "Diabetes"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Inflammation of the ear canal.",
                            DiseaseName = "Ear Infection"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Inflammation of the joints.",
                            DiseaseName = "Arthritis"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Issues with teeth and gums.",
                            DiseaseName = "Dental Disease"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Worms or other internal parasites.",
                            DiseaseName = "Parasites (Internal)"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Highly contagious respiratory disease in dogs.",
                            DiseaseName = "Kennel Cough"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Viral infection affecting the immune system in cats.",
                            DiseaseName = "Feline Immunodeficiency Virus (FIV)"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Metabolic disorder affecting joints in birds and reptiles.",
                            DiseaseName = "Gout"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Inflammation of the pancreas.",
                            DiseaseName = "Pancreatitis"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.AnimalMedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AdmissionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DiagnosisDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DischargeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DiseaseId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int?>("RoomId")
                        .HasColumnType("integer");

                    b.Property<string>("TreatmentNotes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.ToTable("AnimalMedicalRecords", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdmissionDate = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 1,
                            DiagnosisDate = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DischargeDate = new DateTime(2023, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 6,
                            EmployeeId = 1,
                            RoomId = 1,
                            TreatmentNotes = "Treated with antibiotic eye drops. Follow-up in 7 days."
                        },
                        new
                        {
                            Id = 2,
                            AdmissionDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 2,
                            DiagnosisDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DischargeDate = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 9,
                            EmployeeId = 1,
                            RoomId = 2,
                            TreatmentNotes = "Prescribed ear cleaner and anti-inflammatory medication."
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            DiagnosisDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Routine check-up. Healthy."
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            DiagnosisDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Annual wellness exam. Vaccinations given."
                        },
                        new
                        {
                            Id = 5,
                            AdmissionDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 5,
                            DiagnosisDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DischargeDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 4,
                            EmployeeId = 4,
                            RoomId = 3,
                            TreatmentNotes = "Topical antiseptic applied. Monitor for improvement."
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            DiagnosisDate = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 5,
                            EmployeeId = 1,
                            TreatmentNotes = "Medicated fish food administered."
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            DiagnosisDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Annual check-up. Healthy."
                        },
                        new
                        {
                            Id = 8,
                            AdmissionDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 8,
                            DiagnosisDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DischargeDate = new DateTime(2023, 6, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 11,
                            EmployeeId = 1,
                            RoomId = 9,
                            TreatmentNotes = "Dental cleaning scheduled. Minor gum inflammation."
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            DiagnosisDate = new DateTime(2023, 7, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Wing clip and nail trim."
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            DiagnosisDate = new DateTime(2023, 8, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Water quality check. Healthy."
                        },
                        new
                        {
                            Id = 11,
                            AdmissionDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 11,
                            DiagnosisDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 7,
                            EmployeeId = 10,
                            RoomId = 10,
                            TreatmentNotes = "Dietary changes and exercise plan recommended."
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            DiagnosisDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 12,
                            EmployeeId = 1,
                            TreatmentNotes = "Deworming medication administered."
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            DiagnosisDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Rescued stray. General health check. No visible issues."
                        },
                        new
                        {
                            Id = 14,
                            AdmissionDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 14,
                            DiagnosisDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DischargeDate = new DateTime(2023, 10, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 15,
                            EmployeeId = 4,
                            RoomId = 13,
                            TreatmentNotes = "Allopurinol prescribed for gout."
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            DiagnosisDate = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "New adoption check-up. Healthy."
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            DiagnosisDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 13,
                            EmployeeId = 1,
                            TreatmentNotes = "Cough suppressants and rest advised."
                        },
                        new
                        {
                            Id = 17,
                            AdmissionDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 17,
                            DiagnosisDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DischargeDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 2,
                            EmployeeId = 1,
                            RoomId = 2,
                            TreatmentNotes = "FLV positive. Discussed management options."
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            DiagnosisDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Annual check-up. Healthy."
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            DiagnosisDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 9,
                            EmployeeId = 1,
                            TreatmentNotes = "Treated with ear drops for infection."
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            DiagnosisDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 4,
                            TreatmentNotes = "Shedding issues resolved. Proper husbandry discussed."
                        },
                        new
                        {
                            Id = 21,
                            AnimalId = 21,
                            DiagnosisDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "New tank setup. Water parameters stable."
                        },
                        new
                        {
                            Id = 22,
                            AnimalId = 22,
                            DiagnosisDate = new DateTime(2024, 6, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Nail trim and dental check."
                        },
                        new
                        {
                            Id = 23,
                            AnimalId = 23,
                            DiagnosisDate = new DateTime(2024, 7, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 4,
                            TreatmentNotes = "Healthy shedding, good appetite."
                        },
                        new
                        {
                            Id = 24,
                            AnimalId = 24,
                            DiagnosisDate = new DateTime(2024, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Feather health check. Good condition."
                        },
                        new
                        {
                            Id = 25,
                            AnimalId = 25,
                            DiagnosisDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 5,
                            EmployeeId = 1,
                            TreatmentNotes = "Antifungal treatment for fin rot."
                        },
                        new
                        {
                            Id = 26,
                            AdmissionDate = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 26,
                            DiagnosisDate = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 10,
                            EmployeeId = 10,
                            RoomId = 15,
                            TreatmentNotes = "Started pain management for arthritis."
                        },
                        new
                        {
                            Id = 27,
                            AdmissionDate = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 27,
                            DiagnosisDate = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DischargeDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 8,
                            EmployeeId = 10,
                            RoomId = 17,
                            TreatmentNotes = "Insulin therapy initiated for diabetes."
                        },
                        new
                        {
                            Id = 28,
                            AnimalId = 28,
                            DiagnosisDate = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Routine check-up. Healthy."
                        },
                        new
                        {
                            Id = 29,
                            AnimalId = 29,
                            DiagnosisDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 4,
                            TreatmentNotes = "Shell health examination. Good."
                        },
                        new
                        {
                            Id = 30,
                            AnimalId = 30,
                            DiagnosisDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Annual check-up and beak trim."
                        },
                        new
                        {
                            Id = 31,
                            AnimalId = 31,
                            DiagnosisDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 4,
                            TreatmentNotes = "New pet exam. Healthy."
                        },
                        new
                        {
                            Id = 32,
                            AnimalId = 32,
                            DiagnosisDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Vaccinations updated. Healthy."
                        },
                        new
                        {
                            Id = 33,
                            AnimalId = 33,
                            DiagnosisDate = new DateTime(2025, 5, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 1,
                            TreatmentNotes = "Wing health check. Good."
                        },
                        new
                        {
                            Id = 34,
                            AdmissionDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            AnimalId = 34,
                            DiagnosisDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiseaseId = 14,
                            EmployeeId = 1,
                            RoomId = 18,
                            TreatmentNotes = "FIV positive. Discussed care plan."
                        },
                        new
                        {
                            Id = 35,
                            AnimalId = 35,
                            DiagnosisDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeId = 4,
                            TreatmentNotes = "Routine check-up. Healthy."
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.AnimalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnimalTypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("AnimalType");

                    b.HasKey("Id");

                    b.ToTable("AnimalTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalTypeName = "Mammals"
                        },
                        new
                        {
                            Id = 2,
                            AnimalTypeName = "Birds"
                        },
                        new
                        {
                            Id = 3,
                            AnimalTypeName = "Reptiles"
                        },
                        new
                        {
                            Id = 4,
                            AnimalTypeName = "Fish"
                        },
                        new
                        {
                            Id = 5,
                            AnimalTypeName = "Amphibians"
                        },
                        new
                        {
                            Id = 6,
                            AnimalTypeName = "Invertebrates"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "12 Main St, Cityville",
                            DepartmentId = 1,
                            Name = "Dr. Sarah Connor",
                            PhoneNumber = "555-100-0001",
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "34 Elm St, Townsville",
                            DepartmentId = 2,
                            Name = "Dr. John Smith",
                            PhoneNumber = "555-100-0002",
                            SpecialtyId = 5
                        },
                        new
                        {
                            Id = 3,
                            Address = "56 Pine Rd, Villagetown",
                            DepartmentId = 1,
                            Name = "Emily White",
                            PhoneNumber = "555-100-0003",
                            SpecialtyId = 2
                        },
                        new
                        {
                            Id = 4,
                            Address = "78 Oak Ave, Metroville",
                            DepartmentId = 3,
                            Name = "David Green",
                            PhoneNumber = "555-100-0004",
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "90 Maple Ln, Suburbia",
                            DepartmentId = 4,
                            Name = "Jessica Brown",
                            PhoneNumber = "555-100-0005",
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "11 Cedar Ct, Countryside",
                            DepartmentId = 1,
                            Name = "Michael Davis",
                            PhoneNumber = "555-100-0006",
                            SpecialtyId = 3
                        },
                        new
                        {
                            Id = 7,
                            Address = "22 Birch Dr, Lakeside",
                            DepartmentId = 6,
                            Name = "Olivia Wilson",
                            PhoneNumber = "555-100-0007",
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = 8,
                            Address = "33 Willow Way, Hilltop",
                            DepartmentId = 7,
                            Name = "Daniel King",
                            PhoneNumber = "555-100-0008",
                            SpecialtyId = 6
                        },
                        new
                        {
                            Id = 9,
                            Address = "44 Poplar Pl, Valleyview",
                            DepartmentId = 1,
                            Name = "Sophia Moore",
                            PhoneNumber = "555-100-0009",
                            SpecialtyId = 4
                        },
                        new
                        {
                            Id = 10,
                            Address = "55 Spruce Blvd, Forestdale",
                            DepartmentId = 5,
                            Name = "Ethan Hall",
                            PhoneNumber = "555-100-0010",
                            SpecialtyId = 1
                        },
                        new
                        {
                            Id = 11,
                            Address = "10 Elm Rd, Cityville",
                            DepartmentId = 1,
                            Name = "Dr. Laura Adams",
                            PhoneNumber = "555-100-0011",
                            SpecialtyId = 7
                        },
                        new
                        {
                            Id = 12,
                            Address = "20 Oak St, Townsville",
                            DepartmentId = 8,
                            Name = "Chris Evans",
                            PhoneNumber = "555-100-0012",
                            SpecialtyId = 8
                        },
                        new
                        {
                            Id = 13,
                            Address = "30 Pine Ave, Villagetown",
                            DepartmentId = 8,
                            Name = "Megan Fox",
                            PhoneNumber = "555-100-0013",
                            SpecialtyId = 9
                        },
                        new
                        {
                            Id = 14,
                            Address = "40 Maple Cir, Metroville",
                            DepartmentId = 1,
                            Name = "James Bond",
                            PhoneNumber = "555-100-0014",
                            SpecialtyId = 10
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.EmployeeSpecialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SpecialtyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSpecialties", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SpecialtyName = "Veterinarian"
                        },
                        new
                        {
                            Id = 2,
                            SpecialtyName = "Veterinary Technician"
                        },
                        new
                        {
                            Id = 3,
                            SpecialtyName = "Receptionist"
                        },
                        new
                        {
                            Id = 4,
                            SpecialtyName = "Animal Care Assistant"
                        },
                        new
                        {
                            Id = 5,
                            SpecialtyName = "Surgeon"
                        },
                        new
                        {
                            Id = 6,
                            SpecialtyName = "Radiologist"
                        },
                        new
                        {
                            Id = 7,
                            SpecialtyName = "Dietitian"
                        },
                        new
                        {
                            Id = 8,
                            SpecialtyName = "Dog Trainer"
                        },
                        new
                        {
                            Id = 9,
                            SpecialtyName = "Physical Therapist"
                        },
                        new
                        {
                            Id = 10,
                            SpecialtyName = "Pharmacist"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.HospitalDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("HospitalDepartments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "General Practice"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "Surgery"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentName = "Dermatology"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentName = "Ophthalmology"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentName = "Internal Medicine"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentName = "Emergency Care"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentName = "Diagnostics"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentName = "Rehabilitation"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.HospitalRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentAnimalId")
                        .HasColumnType("integer");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("CurrentAnimalId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("HospitalRooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalTypeId = 1,
                            CurrentAnimalId = 1,
                            DepartmentId = 1,
                            RoomNumber = "Room 101"
                        },
                        new
                        {
                            Id = 2,
                            AnimalTypeId = 1,
                            CurrentAnimalId = 2,
                            DepartmentId = 1,
                            RoomNumber = "Room 102"
                        },
                        new
                        {
                            Id = 3,
                            AnimalTypeId = 1,
                            CurrentAnimalId = 3,
                            DepartmentId = 1,
                            RoomNumber = "Room 103"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            RoomNumber = "Room 201"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 2,
                            RoomNumber = "Room 202"
                        },
                        new
                        {
                            Id = 6,
                            AnimalTypeId = 1,
                            DepartmentId = 6,
                            RoomNumber = "Room 301"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 6,
                            RoomNumber = "Room 302"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 8,
                            RoomNumber = "Room 401"
                        },
                        new
                        {
                            Id = 9,
                            AnimalTypeId = 1,
                            CurrentAnimalId = 8,
                            DepartmentId = 1,
                            RoomNumber = "Room 104"
                        },
                        new
                        {
                            Id = 10,
                            AnimalTypeId = 1,
                            CurrentAnimalId = 11,
                            DepartmentId = 1,
                            RoomNumber = "Room 105"
                        },
                        new
                        {
                            Id = 11,
                            AnimalTypeId = 1,
                            DepartmentId = 2,
                            RoomNumber = "Room 203"
                        },
                        new
                        {
                            Id = 12,
                            AnimalTypeId = 2,
                            DepartmentId = 2,
                            RoomNumber = "Room 204"
                        },
                        new
                        {
                            Id = 13,
                            AnimalTypeId = 3,
                            DepartmentId = 6,
                            RoomNumber = "Room 303"
                        },
                        new
                        {
                            Id = 14,
                            AnimalTypeId = 4,
                            DepartmentId = 6,
                            RoomNumber = "Room 304"
                        },
                        new
                        {
                            Id = 15,
                            AnimalTypeId = 1,
                            DepartmentId = 8,
                            RoomNumber = "Room 402"
                        },
                        new
                        {
                            Id = 16,
                            AnimalTypeId = 2,
                            DepartmentId = 8,
                            RoomNumber = "Room 403"
                        },
                        new
                        {
                            Id = 17,
                            AnimalTypeId = 1,
                            DepartmentId = 5,
                            RoomNumber = "Room 501"
                        },
                        new
                        {
                            Id = 18,
                            DepartmentId = 5,
                            RoomNumber = "Room 502"
                        },
                        new
                        {
                            Id = 19,
                            DepartmentId = 7,
                            RoomNumber = "Room 601"
                        },
                        new
                        {
                            Id = 20,
                            DepartmentId = 7,
                            RoomNumber = "Room 602"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("Owners", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Address = "123 Oak Ave, Cityville",
                            Name = "Alice Johnson",
                            PhoneNumber = "555-123-4567"
                        },
                        new
                        {
                            Id = 102,
                            Address = "456 Pine St, Townsville",
                            Name = "Bob Williams",
                            PhoneNumber = "555-987-6543"
                        },
                        new
                        {
                            Id = 103,
                            Address = "789 Maple Rd, Villagetown",
                            Name = "Charlie Brown",
                            PhoneNumber = "555-555-1212"
                        },
                        new
                        {
                            Id = 104,
                            Address = "101 Cedar Ln, Metroville",
                            Name = "Diana Prince",
                            PhoneNumber = "555-333-2211"
                        },
                        new
                        {
                            Id = 105,
                            Address = "202 Elm Ct, Suburbia",
                            Name = "Eve Davis",
                            PhoneNumber = "555-777-8899"
                        },
                        new
                        {
                            Id = 106,
                            Address = "303 Birch Dr, Countryside",
                            Name = "Frank White",
                            PhoneNumber = "555-444-3322"
                        },
                        new
                        {
                            Id = 107,
                            Address = "404 Willow Way, Lakeside",
                            Name = "Grace Lee",
                            PhoneNumber = "555-111-0000"
                        },
                        new
                        {
                            Id = 108,
                            Address = "505 Poplar Pl, Hilltop",
                            Name = "Henry Miller",
                            PhoneNumber = "555-222-1111"
                        },
                        new
                        {
                            Id = 109,
                            Address = "606 Spruce Blvd, Valleyview",
                            Name = "Ivy Chen",
                            PhoneNumber = "555-666-7777"
                        },
                        new
                        {
                            Id = 110,
                            Address = "707 Fir Cir, Forestdale",
                            Name = "Jack Taylor",
                            PhoneNumber = "555-888-9999"
                        },
                        new
                        {
                            Id = 111,
                            Address = "808 Palm Dr, Desert Springs",
                            Name = "Karen Green",
                            PhoneNumber = "555-999-1122"
                        },
                        new
                        {
                            Id = 112,
                            Address = "909 Ocean View, Coastal City",
                            Name = "Liam Scott",
                            PhoneNumber = "555-000-2233"
                        },
                        new
                        {
                            Id = 113,
                            Address = "111 Mountain Rd, Peakville",
                            Name = "Mia Baker",
                            PhoneNumber = "555-112-3344"
                        },
                        new
                        {
                            Id = 114,
                            Address = "222 Riverbend, Waterside",
                            Name = "Noah Hall",
                            PhoneNumber = "555-223-4455"
                        },
                        new
                        {
                            Id = 115,
                            Address = "333 Forest Trail, Woodlawn",
                            Name = "Olivia King",
                            PhoneNumber = "555-334-5566"
                        },
                        new
                        {
                            Id = 116,
                            Address = "444 Valley St, Greenfields",
                            Name = "Peter Lewis",
                            PhoneNumber = "555-445-6677"
                        },
                        new
                        {
                            Id = 117,
                            Address = "555 Sunset Blvd, West End",
                            Name = "Quinn Clark",
                            PhoneNumber = "555-556-7788"
                        },
                        new
                        {
                            Id = 118,
                            Address = "666 Sunrise Cir, East End",
                            Name = "Rachel Adams",
                            PhoneNumber = "555-667-8899"
                        },
                        new
                        {
                            Id = 119,
                            Address = "777 Meadow Ln, Bloomville",
                            Name = "Sam Turner",
                            PhoneNumber = "555-778-9900"
                        },
                        new
                        {
                            Id = 120,
                            Address = "888 Creek Ave, Gables",
                            Name = "Tina Roberts",
                            PhoneNumber = "555-889-0011"
                        },
                        new
                        {
                            Id = 121,
                            Address = "999 Hillside Dr, Summit",
                            Name = "Ursula Nelson",
                            PhoneNumber = "555-990-1122"
                        },
                        new
                        {
                            Id = 122,
                            Address = "1010 Pinecone Rd, Timberland",
                            Name = "Victor Bell",
                            PhoneNumber = "555-001-2233"
                        },
                        new
                        {
                            Id = 123,
                            Address = "1122 Cherry Ln, Orchards",
                            Name = "Wendy Cook",
                            PhoneNumber = "555-112-3344"
                        },
                        new
                        {
                            Id = 124,
                            Address = "1313 Elmwood St, Old Town",
                            Name = "Xavier Wright",
                            PhoneNumber = "555-223-4455"
                        },
                        new
                        {
                            Id = 125,
                            Address = "1414 Birchwood Dr, New Haven",
                            Name = "Yara Young",
                            PhoneNumber = "555-334-5566"
                        },
                        new
                        {
                            Id = 126,
                            Address = "1515 Willow Ct, Lakeside Hills",
                            Name = "Zoe Harris",
                            PhoneNumber = "555-445-6677"
                        },
                        new
                        {
                            Id = 127,
                            Address = "1616 Poplar Pl, Riverfront",
                            Name = "Adam Green",
                            PhoneNumber = "555-556-7788"
                        },
                        new
                        {
                            Id = 128,
                            Address = "1717 Spruce Blvd, Highlands",
                            Name = "Bella Baker",
                            PhoneNumber = "555-667-8899"
                        },
                        new
                        {
                            Id = 129,
                            Address = "1818 Fir Cir, Lowlands",
                            Name = "Caleb Carter",
                            PhoneNumber = "555-778-9900"
                        },
                        new
                        {
                            Id = 130,
                            Address = "1919 Cedar St, Midtown",
                            Name = "Daisy Dixon",
                            PhoneNumber = "555-889-0011"
                        },
                        new
                        {
                            Id = 131,
                            Address = "2020 Maple Rd, Uptown",
                            Name = "Evan Evans",
                            PhoneNumber = "555-990-1122"
                        },
                        new
                        {
                            Id = 132,
                            Address = "2121 Oak Hill, Countryside Est.",
                            Name = "Fiona Fisher",
                            PhoneNumber = "555-001-2233"
                        },
                        new
                        {
                            Id = 133,
                            Address = "2222 Pine Valley, Whispering Pines",
                            Name = "George Grant",
                            PhoneNumber = "555-112-3344"
                        },
                        new
                        {
                            Id = 134,
                            Address = "2323 Redwood Way, Forest Glen",
                            Name = "Holly Hunter",
                            PhoneNumber = "555-223-4455"
                        },
                        new
                        {
                            Id = 135,
                            Address = "2424 Evergreen Dr, Green Acres",
                            Name = "Isaac Irwin",
                            PhoneNumber = "555-334-5566"
                        });
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("VeterinaryClinic.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.ApplicationUser", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinaryClinic.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Animal", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.AnimalType", "AnimalType")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinaryClinic.DAL.Entities.Owner", "Owner")
                        .WithMany("Animals")
                        .HasForeignKey("OwnerId");

                    b.Navigation("AnimalType");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.AnimalMedicalRecord", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.Animal", "Animal")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinaryClinic.DAL.Entities.AnimalDisease", "Disease")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("DiseaseId");

                    b.HasOne("VeterinaryClinic.DAL.Entities.Employee", "Employee")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("VeterinaryClinic.DAL.Entities.HospitalRoom", "Room")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("RoomId");

                    b.Navigation("Animal");

                    b.Navigation("Disease");

                    b.Navigation("Employee");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Employee", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.HospitalDepartment", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinaryClinic.DAL.Entities.EmployeeSpecialty", "Specialty")
                        .WithMany("Employees")
                        .HasForeignKey("SpecialtyId");

                    b.Navigation("Department");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.HospitalRoom", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.AnimalType", "AnimalType")
                        .WithMany("HospitalRooms")
                        .HasForeignKey("AnimalTypeId");

                    b.HasOne("VeterinaryClinic.DAL.Entities.Animal", "CurrentAnimal")
                        .WithMany()
                        .HasForeignKey("CurrentAnimalId");

                    b.HasOne("VeterinaryClinic.DAL.Entities.HospitalDepartment", "Department")
                        .WithMany("HospitalRooms")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("AnimalType");

                    b.Navigation("CurrentAnimal");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.RefreshToken", b =>
                {
                    b.HasOne("VeterinaryClinic.DAL.Entities.ApplicationUser", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Animal", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.AnimalDisease", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.AnimalType", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("HospitalRooms");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("RefreshTokens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Employee", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.EmployeeSpecialty", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.HospitalDepartment", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("HospitalRooms");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.HospitalRoom", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("VeterinaryClinic.DAL.Entities.Owner", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
